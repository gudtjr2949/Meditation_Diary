{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\front \\uAD6C\\uBC84\\uC804\\\\S09P22B205\\\\front\\\\src\\\\layouts\\\\Admin\\\\BeforeLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\nimport { Button } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BeforeLogin() {\n  _s();\n  var _this = this;\n  var _useContext = useContext(BackgroundColorContext),\n    color = _useContext.color,\n    changeColor = _useContext.changeColor;\n\n  // white-content 클래스가 있는지 체크\n  var isWhiteContent = document.body.classList.contains(\"white-content\");\n  var handleKakaoLogin = function handleKakaoLogin() {\n    // 환경 변수에서 값을 가져오기\n    var clientId = process.env.REACT_APP_CLIENT_ID;\n    var redirectUri = process.env.REACT_APP_REDIRECT_URI;\n\n    // GET 요청을 보낼 엔드포인트 URL\n    var apiUrl = \"https://kauth.kakao.com/oauth/authorize?client_id=\".concat(clientId, \"&redirect_uri=\").concat(redirectUri, \"&response_type=code\"); // GET 요청을 보낼 URL로 변경\n    // console.log('확인')\n    window.location.href = apiUrl;\n    console.log(clientId, redirectUri);\n  };\n  return /*#__PURE__*/_jsxDEV(BackgroundColorContext.Consumer, {\n    children: function children(_ref) {\n      var color = _ref.color,\n        changeColor = _ref.changeColor;\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100vh\" // 화면 높이를 창 높이로 설정\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              backgroundImage: 'none',\n              color: isWhiteContent ? '#000000' : '#ffffff',\n              // white-content 클래스가 있으면 검정색, 없으면 흰색\n              fontSize: '18px',\n              padding: '10px 20px',\n              borderRadius: '25px'\n            },\n            className: \"bg-\".concat(isWhiteContent ? 'dark' : 'white') // white-content 클래스가 있으면 dark, 없으면 white\n            ,\n            onClick: handleKakaoLogin,\n            children: \"Login with Kakao\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(FixedPlugin, {\n          bgColor: color,\n          handleBgClick: changeColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(BeforeLogin, \"aUjhOJzpKdtvk7JRlz7ahwxVMfQ=\");\n_c = BeforeLogin;\nexport default BeforeLogin;\nvar _c;\n$RefreshReg$(_c, \"BeforeLogin\");","map":{"version":3,"names":["React","useContext","BackgroundColorContext","FixedPlugin","Button","jsxDEV","_jsxDEV","BeforeLogin","_s","_this","_useContext","color","changeColor","isWhiteContent","document","body","classList","contains","handleKakaoLogin","clientId","process","env","REACT_APP_CLIENT_ID","redirectUri","REACT_APP_REDIRECT_URI","apiUrl","concat","window","location","href","console","log","Consumer","children","_ref","Fragment","className","style","display","justifyContent","alignItems","height","backgroundImage","fontSize","padding","borderRadius","onClick","fileName","_jsxFileName","lineNumber","columnNumber","bgColor","handleBgClick","_c","$RefreshReg$"],"sources":["C:/Users/SSAFY/Desktop/front 구버전/S09P22B205/front/src/layouts/Admin/BeforeLogin.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nfunction BeforeLogin() {\r\n    const { color, changeColor } = useContext(BackgroundColorContext);\r\n\r\n    // white-content 클래스가 있는지 체크\r\n    const isWhiteContent = document.body.classList.contains(\"white-content\");\r\n    const handleKakaoLogin = () => {\r\n        // 환경 변수에서 값을 가져오기\r\n        const clientId = process.env.REACT_APP_CLIENT_ID;\r\n        const redirectUri = process.env.REACT_APP_REDIRECT_URI;\r\n        \r\n        // GET 요청을 보낼 엔드포인트 URL\r\n        const apiUrl = `https://kauth.kakao.com/oauth/authorize?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=code`; // GET 요청을 보낼 URL로 변경\r\n        // console.log('확인')\r\n        window.location.href = apiUrl\r\n        console.log(clientId, redirectUri)\r\n      }\r\n    return (\r\n        <BackgroundColorContext.Consumer>\r\n            {({ color, changeColor }) => (\r\n                <React.Fragment>\r\n                <div className=\"wrapper\"\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        height: \"100vh\", // 화면 높이를 창 높이로 설정\r\n                    }}\r\n                >\r\n                    {/* <Sidebar\r\n                    routes={routes}\r\n                    logo={{\r\n                        outterLink: \"https://www.creative-tim.com/\",\r\n                        text: \"Creative Tim\",\r\n                        imgSrc: logo,\r\n                    }}\r\n                    toggleSidebar={toggleSidebar}\r\n                    /> */}\r\n                    {/* <div className=\"main-panel\" ref={mainPanelRef} data={color}>\r\n                    <AdminNavbar\r\n                        brandText={getBrandText(location.pathname)}\r\n                        toggleSidebar={toggleSidebar}\r\n                        sidebarOpened={sidebarOpened}\r\n                    />\r\n                    <Routes>\r\n                        {getRoutes(routes)}\r\n                        <Route\r\n                        path=\"/\"\r\n                        element={<Navigate to=\"/admin/dashboard\" replace />}\r\n                        />\r\n                    </Routes>\r\n                    {\r\n                        // we don't want the Footer to be rendered on map page\r\n                        location.pathname === \"/admin/maps\" ? null : <Footer fluid />\r\n                    }\r\n                    </div> */}\r\n                    <Button\r\n                    style={{\r\n                        backgroundImage: 'none',\r\n                        color: isWhiteContent ? '#000000' : '#ffffff', // white-content 클래스가 있으면 검정색, 없으면 흰색\r\n                        fontSize: '18px',\r\n                        padding: '10px 20px',\r\n                        borderRadius: '25px',\r\n                    }}\r\n                    className={`bg-${isWhiteContent ? 'dark' : 'white'}`} // white-content 클래스가 있으면 dark, 없으면 white\r\n                    onClick={handleKakaoLogin}\r\n                >\r\n                        Login with Kakao\r\n                    </Button>\r\n                    \r\n                </div>\r\n                <FixedPlugin bgColor={color} handleBgClick={changeColor} />\r\n                </React.Fragment>\r\n            )}\r\n        </BackgroundColorContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default BeforeLogin"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,sBAAsB,QAAQ,iCAAiC;AACxE,OAAOC,WAAW,MAAM,uCAAuC;AAC/D,SAASC,MAAM,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,KAAA;EACnB,IAAAC,WAAA,GAA+BT,UAAU,CAACC,sBAAsB,CAAC;IAAzDS,KAAK,GAAAD,WAAA,CAALC,KAAK;IAAEC,WAAW,GAAAF,WAAA,CAAXE,WAAW;;EAE1B;EACA,IAAMC,cAAc,GAAGC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,eAAe,CAAC;EACxE,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC3B;IACA,IAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB;IAChD,IAAMC,WAAW,GAAGH,OAAO,CAACC,GAAG,CAACG,sBAAsB;;IAEtD;IACA,IAAMC,MAAM,wDAAAC,MAAA,CAAwDP,QAAQ,oBAAAO,MAAA,CAAiBH,WAAW,wBAAqB,CAAC,CAAC;IAC/H;IACAI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGJ,MAAM;IAC7BK,OAAO,CAACC,GAAG,CAACZ,QAAQ,EAAEI,WAAW,CAAC;EACpC,CAAC;EACH,oBACIjB,OAAA,CAACJ,sBAAsB,CAAC8B,QAAQ;IAAAC,QAAA,EAC3B,SAAAA,SAAAC,IAAA;MAAA,IAAGvB,KAAK,GAAAuB,IAAA,CAALvB,KAAK;QAAEC,WAAW,GAAAsB,IAAA,CAAXtB,WAAW;MAAA,oBAClBN,OAAA,CAACN,KAAK,CAACmC,QAAQ;QAAAF,QAAA,gBACf3B,OAAA;UAAK8B,SAAS,EAAC,SAAS;UACpBC,KAAK,EAAE;YACHC,OAAO,EAAE,MAAM;YACfC,cAAc,EAAE,QAAQ;YACxBC,UAAU,EAAE,QAAQ;YACpBC,MAAM,EAAE,OAAO,CAAE;UACrB,CAAE;UAAAR,QAAA,eA6BF3B,OAAA,CAACF,MAAM;YACPiC,KAAK,EAAE;cACHK,eAAe,EAAE,MAAM;cACvB/B,KAAK,EAAEE,cAAc,GAAG,SAAS,GAAG,SAAS;cAAE;cAC/C8B,QAAQ,EAAE,MAAM;cAChBC,OAAO,EAAE,WAAW;cACpBC,YAAY,EAAE;YAClB,CAAE;YACFT,SAAS,QAAAV,MAAA,CAAQb,cAAc,GAAG,MAAM,GAAG,OAAO,CAAG,CAAC;YAAA;YACtDiC,OAAO,EAAE5B,gBAAiB;YAAAe,QAAA,EAC7B;UAEG;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,GAAAzC,KAAQ;QAAC;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAzC,KAER,CAAC,eACNH,OAAA,CAACH,WAAW;UAACgD,OAAO,EAAExC,KAAM;UAACyC,aAAa,EAAExC;QAAY;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,GAAAzC,KAAE,CAAC;MAAA;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,GAAAzC,KAC3C,CAAC;IAAA;EACpB;IAAAsC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC4B,CAAC;AAE1C;AAAC1C,EAAA,CA3EQD,WAAW;AAAA8C,EAAA,GAAX9C,WAAW;AA6EpB,eAAeA,WAAW;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}