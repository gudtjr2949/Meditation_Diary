{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\nvar _PropTypes = require(\"./utils/PropTypes\");\nvar _TransitionGroupContext = _interopRequireDefault(require(\"./TransitionGroupContext\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\nvar UNMOUNTED = 'unmounted';\nexports.UNMOUNTED = UNMOUNTED;\nvar EXITED = 'exited';\nexports.EXITED = EXITED;\nvar ENTERING = 'entering';\nexports.ENTERING = ENTERING;\nvar ENTERED = 'entered';\nexports.ENTERED = ENTERED;\nvar EXITING = 'exiting';\n/**\r\n * The Transition component lets you describe a transition from one component\r\n * state to another _over time_ with a simple declarative API. Most commonly\r\n * it's used to animate the mounting and unmounting of a component, but can also\r\n * be used to describe in-place transition states as well.\r\n *\r\n * ---\r\n *\r\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\r\n * transitions in CSS, you'll probably want to use\r\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\r\n * instead. It inherits all the features of `Transition`, but contains\r\n * additional features necessary to play nice with CSS transitions (hence the\r\n * name of the component).\r\n *\r\n * ---\r\n *\r\n * By default the `Transition` component does not alter the behavior of the\r\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\r\n * components. It's up to you to give meaning and effect to those states. For\r\n * example we can add styles to a component when it enters or exits:\r\n *\r\n * ```jsx\r\n * import { Transition } from 'react-transition-group';\r\n *\r\n * const duration = 300;\r\n *\r\n * const defaultStyle = {\r\n *   transition: `opacity ${duration}ms ease-in-out`,\r\n *   opacity: 0,\r\n * }\r\n *\r\n * const transitionStyles = {\r\n *   entering: { opacity: 1 },\r\n *   entered:  { opacity: 1 },\r\n *   exiting:  { opacity: 0 },\r\n *   exited:  { opacity: 0 },\r\n * };\r\n *\r\n * const Fade = ({ in: inProp }) => (\r\n *   <Transition in={inProp} timeout={duration}>\r\n *     {state => (\r\n *       <div style={{\r\n *         ...defaultStyle,\r\n *         ...transitionStyles[state]\r\n *       }}>\r\n *         I'm a fade Transition!\r\n *       </div>\r\n *     )}\r\n *   </Transition>\r\n * );\r\n * ```\r\n *\r\n * There are 4 main states a Transition can be in:\r\n *  - `'entering'`\r\n *  - `'entered'`\r\n *  - `'exiting'`\r\n *  - `'exited'`\r\n *\r\n * Transition state is toggled via the `in` prop. When `true` the component\r\n * begins the \"Enter\" stage. During this stage, the component will shift from\r\n * its current transition state, to `'entering'` for the duration of the\r\n * transition and then to the `'entered'` stage once it's complete. Let's take\r\n * the following example (we'll use the\r\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\r\n *\r\n * ```jsx\r\n * function App() {\r\n *   const [inProp, setInProp] = useState(false);\r\n *   return (\r\n *     <div>\r\n *       <Transition in={inProp} timeout={500}>\r\n *         {state => (\r\n *           // ...\r\n *         )}\r\n *       </Transition>\r\n *       <button onClick={() => setInProp(true)}>\r\n *         Click to Enter\r\n *       </button>\r\n *     </div>\r\n *   );\r\n * }\r\n * ```\r\n *\r\n * When the button is clicked the component will shift to the `'entering'` state\r\n * and stay there for 500ms (the value of `timeout`) before it finally switches\r\n * to `'entered'`.\r\n *\r\n * When `in` is `false` the same thing happens except the state moves from\r\n * `'exiting'` to `'exited'`.\r\n */\n\nexports.EXITING = EXITING;\nvar Transition = /*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n  function Transition(props, context) {\n    var _this;\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n    return null;\n  }; // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n\n  var _proto = Transition.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n    this.updateStatus(false, nextStatus);\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n      var node = _reactDom.default.findDOMNode(this);\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n  _proto.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n    this.props.onEnter(node, appearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(node, appearing);\n      _this2.onTransitionEnd(node, enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n  _proto.performExit = function performExit(node) {\n    var _this3 = this;\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n    if (!exit) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n    this.props.onExit(node);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(node);\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n    var active = true;\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n    return this.nextCallback;\n  };\n  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n    if (this.props.addEndListener) {\n      this.props.addEndListener(node, this.nextCallback);\n    }\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n  _proto.render = function render() {\n    var status = this.state.status;\n    if (status === UNMOUNTED) {\n      return null;\n    }\n    var _this$props = this.props,\n      children = _this$props.children,\n      childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n    if (typeof children === 'function') {\n      // allows for nested Transitions\n      return _react.default.createElement(_TransitionGroupContext.default.Provider, {\n        value: null\n      }, children(status, childProps));\n    }\n    var child = _react.default.Children.only(children);\n    return (\n      // allows for nested Transitions\n      _react.default.createElement(_TransitionGroupContext.default.Provider, {\n        value: null\n      }, _react.default.cloneElement(child, childProps))\n    );\n  };\n  return Transition;\n}(_react.default.Component);\nTransition.contextType = _TransitionGroupContext.default;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\r\n   * A `function` child can be used instead of a React element. This function is\r\n   * called with the current transition status (`'entering'`, `'entered'`,\r\n   * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context\r\n   * specific props to a component.\r\n   *\r\n   * ```jsx\r\n   * <Transition in={this.state.in} timeout={150}>\r\n   *   {state => (\r\n   *     <MyComponent className={`fade fade-${state}`} />\r\n   *   )}\r\n   * </Transition>\r\n   * ```\r\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n  /**\r\n   * Show the component; triggers the enter or exit states\r\n   */\n  in: PropTypes.bool,\n  /**\r\n   * By default the child component is mounted immediately along with\r\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\r\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\r\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\r\n   */\n  mountOnEnter: PropTypes.bool,\n  /**\r\n   * By default the child component stays mounted after it reaches the `'exited'` state.\r\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\r\n   */\n  unmountOnExit: PropTypes.bool,\n  /**\r\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\r\n   * If you want to transition on the first mount set `appear` to `true`, and the\r\n   * component will transition in as soon as the `<Transition>` mounts.\r\n   *\r\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\r\n   */\n  appear: PropTypes.bool,\n  /**\r\n   * Enable or disable enter transitions.\r\n   */\n  enter: PropTypes.bool,\n  /**\r\n   * Enable or disable exit transitions.\r\n   */\n  exit: PropTypes.bool,\n  /**\r\n   * The duration of the transition, in milliseconds.\r\n   * Required unless `addEndListener` is provided.\r\n   *\r\n   * You may specify a single timeout for all transitions:\r\n   *\r\n   * ```jsx\r\n   * timeout={500}\r\n   * ```\r\n   *\r\n   * or individually:\r\n   *\r\n   * ```jsx\r\n   * timeout={{\r\n   *  appear: 500,\r\n   *  enter: 300,\r\n   *  exit: 500,\r\n   * }}\r\n   * ```\r\n   *\r\n   * - `appear` defaults to the value of `enter`\r\n   * - `enter` defaults to `0`\r\n   * - `exit` defaults to `0`\r\n   *\r\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\r\n   */\n  timeout: function timeout(props) {\n    var pt = _PropTypes.timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return pt.apply(void 0, [props].concat(args));\n  },\n  /**\r\n   * Add a custom transition end trigger. Called with the transitioning\r\n   * DOM node and a `done` callback. Allows for more fine grained transition end\r\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\r\n   *\r\n   * ```jsx\r\n   * addEndListener={(node, done) => {\r\n   *   // use the css transitionend event to mark the finish of a transition\r\n   *   node.addEventListener('transitionend', done, false);\r\n   * }}\r\n   * ```\r\n   */\n  addEndListener: PropTypes.func,\n  /**\r\n   * Callback fired before the \"entering\" status is applied. An extra parameter\r\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\r\n   *\r\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\r\n   */\n  onEnter: PropTypes.func,\n  /**\r\n   * Callback fired after the \"entering\" status is applied. An extra parameter\r\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\r\n   *\r\n   * @type Function(node: HtmlElement, isAppearing: bool)\r\n   */\n  onEntering: PropTypes.func,\n  /**\r\n   * Callback fired after the \"entered\" status is applied. An extra parameter\r\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\r\n   *\r\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\r\n   */\n  onEntered: PropTypes.func,\n  /**\r\n   * Callback fired before the \"exiting\" status is applied.\r\n   *\r\n   * @type Function(node: HtmlElement) -> void\r\n   */\n  onExit: PropTypes.func,\n  /**\r\n   * Callback fired after the \"exiting\" status is applied.\r\n   *\r\n   * @type Function(node: HtmlElement) -> void\r\n   */\n  onExiting: PropTypes.func,\n  /**\r\n   * Callback fired after the \"exited\" status is applied.\r\n   *\r\n   * @type Function(node: HtmlElement) -> void\r\n   */\n  onExited: PropTypes.func // Name the function so it is clearer in the documentation\n} : {};\nfunction noop() {}\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\nvar _default = (0, _reactLifecyclesCompat.polyfill)(Transition);\nexports.default = _default;","map":{"version":3,"names":["exports","__esModule","default","EXITING","ENTERED","ENTERING","EXITED","UNMOUNTED","PropTypes","_interopRequireWildcard","require","_react","_interopRequireDefault","_reactDom","_reactLifecyclesCompat","_PropTypes","_TransitionGroupContext","obj","newObj","key","Object","prototype","hasOwnProperty","call","desc","defineProperty","getOwnPropertyDescriptor","get","set","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","keys","i","length","indexOf","_inheritsLoose","subClass","superClass","create","constructor","__proto__","Transition","_React$Component","props","context","_this","parentGroup","appear","isMounting","enter","initialStatus","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","getDerivedStateFromProps","_ref","prevState","nextIn","_proto","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","timeout","exit","undefined","mounting","node","findDOMNode","performEnter","performExit","setState","_this2","appearing","timeouts","enterTimeout","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExited","onExit","onExiting","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","setTimeout","render","_this$props","children","childProps","createElement","Provider","value","child","Children","only","cloneElement","Component","contextType","propTypes","process","env","NODE_ENV","oneOfType","func","isRequired","element","bool","pt","timeoutsShape","_len","arguments","args","Array","_key","apply","concat","noop","defaultProps","_default","polyfill"],"sources":["C:/Users/SSAFY/Desktop/front 구버전/S09P22B205/front/node_modules/react-transition-group/Transition.js"],"sourcesContent":["\"use strict\";\r\n\r\nexports.__esModule = true;\r\nexports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;\r\n\r\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\r\n\r\nvar _react = _interopRequireDefault(require(\"react\"));\r\n\r\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\r\n\r\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\r\n\r\nvar _PropTypes = require(\"./utils/PropTypes\");\r\n\r\nvar _TransitionGroupContext = _interopRequireDefault(require(\"./TransitionGroupContext\"));\r\n\r\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\r\n\r\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\n\r\nvar UNMOUNTED = 'unmounted';\r\nexports.UNMOUNTED = UNMOUNTED;\r\nvar EXITED = 'exited';\r\nexports.EXITED = EXITED;\r\nvar ENTERING = 'entering';\r\nexports.ENTERING = ENTERING;\r\nvar ENTERED = 'entered';\r\nexports.ENTERED = ENTERED;\r\nvar EXITING = 'exiting';\r\n/**\r\n * The Transition component lets you describe a transition from one component\r\n * state to another _over time_ with a simple declarative API. Most commonly\r\n * it's used to animate the mounting and unmounting of a component, but can also\r\n * be used to describe in-place transition states as well.\r\n *\r\n * ---\r\n *\r\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\r\n * transitions in CSS, you'll probably want to use\r\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\r\n * instead. It inherits all the features of `Transition`, but contains\r\n * additional features necessary to play nice with CSS transitions (hence the\r\n * name of the component).\r\n *\r\n * ---\r\n *\r\n * By default the `Transition` component does not alter the behavior of the\r\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\r\n * components. It's up to you to give meaning and effect to those states. For\r\n * example we can add styles to a component when it enters or exits:\r\n *\r\n * ```jsx\r\n * import { Transition } from 'react-transition-group';\r\n *\r\n * const duration = 300;\r\n *\r\n * const defaultStyle = {\r\n *   transition: `opacity ${duration}ms ease-in-out`,\r\n *   opacity: 0,\r\n * }\r\n *\r\n * const transitionStyles = {\r\n *   entering: { opacity: 1 },\r\n *   entered:  { opacity: 1 },\r\n *   exiting:  { opacity: 0 },\r\n *   exited:  { opacity: 0 },\r\n * };\r\n *\r\n * const Fade = ({ in: inProp }) => (\r\n *   <Transition in={inProp} timeout={duration}>\r\n *     {state => (\r\n *       <div style={{\r\n *         ...defaultStyle,\r\n *         ...transitionStyles[state]\r\n *       }}>\r\n *         I'm a fade Transition!\r\n *       </div>\r\n *     )}\r\n *   </Transition>\r\n * );\r\n * ```\r\n *\r\n * There are 4 main states a Transition can be in:\r\n *  - `'entering'`\r\n *  - `'entered'`\r\n *  - `'exiting'`\r\n *  - `'exited'`\r\n *\r\n * Transition state is toggled via the `in` prop. When `true` the component\r\n * begins the \"Enter\" stage. During this stage, the component will shift from\r\n * its current transition state, to `'entering'` for the duration of the\r\n * transition and then to the `'entered'` stage once it's complete. Let's take\r\n * the following example (we'll use the\r\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\r\n *\r\n * ```jsx\r\n * function App() {\r\n *   const [inProp, setInProp] = useState(false);\r\n *   return (\r\n *     <div>\r\n *       <Transition in={inProp} timeout={500}>\r\n *         {state => (\r\n *           // ...\r\n *         )}\r\n *       </Transition>\r\n *       <button onClick={() => setInProp(true)}>\r\n *         Click to Enter\r\n *       </button>\r\n *     </div>\r\n *   );\r\n * }\r\n * ```\r\n *\r\n * When the button is clicked the component will shift to the `'entering'` state\r\n * and stay there for 500ms (the value of `timeout`) before it finally switches\r\n * to `'entered'`.\r\n *\r\n * When `in` is `false` the same thing happens except the state moves from\r\n * `'exiting'` to `'exited'`.\r\n */\r\n\r\nexports.EXITING = EXITING;\r\n\r\nvar Transition =\r\n/*#__PURE__*/\r\nfunction (_React$Component) {\r\n  _inheritsLoose(Transition, _React$Component);\r\n\r\n  function Transition(props, context) {\r\n    var _this;\r\n\r\n    _this = _React$Component.call(this, props, context) || this;\r\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\r\n\r\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\r\n    var initialStatus;\r\n    _this.appearStatus = null;\r\n\r\n    if (props.in) {\r\n      if (appear) {\r\n        initialStatus = EXITED;\r\n        _this.appearStatus = ENTERING;\r\n      } else {\r\n        initialStatus = ENTERED;\r\n      }\r\n    } else {\r\n      if (props.unmountOnExit || props.mountOnEnter) {\r\n        initialStatus = UNMOUNTED;\r\n      } else {\r\n        initialStatus = EXITED;\r\n      }\r\n    }\r\n\r\n    _this.state = {\r\n      status: initialStatus\r\n    };\r\n    _this.nextCallback = null;\r\n    return _this;\r\n  }\r\n\r\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\r\n    var nextIn = _ref.in;\r\n\r\n    if (nextIn && prevState.status === UNMOUNTED) {\r\n      return {\r\n        status: EXITED\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }; // getSnapshotBeforeUpdate(prevProps) {\r\n  //   let nextStatus = null\r\n  //   if (prevProps !== this.props) {\r\n  //     const { status } = this.state\r\n  //     if (this.props.in) {\r\n  //       if (status !== ENTERING && status !== ENTERED) {\r\n  //         nextStatus = ENTERING\r\n  //       }\r\n  //     } else {\r\n  //       if (status === ENTERING || status === ENTERED) {\r\n  //         nextStatus = EXITING\r\n  //       }\r\n  //     }\r\n  //   }\r\n  //   return { nextStatus }\r\n  // }\r\n\r\n\r\n  var _proto = Transition.prototype;\r\n\r\n  _proto.componentDidMount = function componentDidMount() {\r\n    this.updateStatus(true, this.appearStatus);\r\n  };\r\n\r\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\r\n    var nextStatus = null;\r\n\r\n    if (prevProps !== this.props) {\r\n      var status = this.state.status;\r\n\r\n      if (this.props.in) {\r\n        if (status !== ENTERING && status !== ENTERED) {\r\n          nextStatus = ENTERING;\r\n        }\r\n      } else {\r\n        if (status === ENTERING || status === ENTERED) {\r\n          nextStatus = EXITING;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.updateStatus(false, nextStatus);\r\n  };\r\n\r\n  _proto.componentWillUnmount = function componentWillUnmount() {\r\n    this.cancelNextCallback();\r\n  };\r\n\r\n  _proto.getTimeouts = function getTimeouts() {\r\n    var timeout = this.props.timeout;\r\n    var exit, enter, appear;\r\n    exit = enter = appear = timeout;\r\n\r\n    if (timeout != null && typeof timeout !== 'number') {\r\n      exit = timeout.exit;\r\n      enter = timeout.enter; // TODO: remove fallback for next major\r\n\r\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\r\n    }\r\n\r\n    return {\r\n      exit: exit,\r\n      enter: enter,\r\n      appear: appear\r\n    };\r\n  };\r\n\r\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\r\n    if (mounting === void 0) {\r\n      mounting = false;\r\n    }\r\n\r\n    if (nextStatus !== null) {\r\n      // nextStatus will always be ENTERING or EXITING.\r\n      this.cancelNextCallback();\r\n\r\n      var node = _reactDom.default.findDOMNode(this);\r\n\r\n      if (nextStatus === ENTERING) {\r\n        this.performEnter(node, mounting);\r\n      } else {\r\n        this.performExit(node);\r\n      }\r\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\r\n      this.setState({\r\n        status: UNMOUNTED\r\n      });\r\n    }\r\n  };\r\n\r\n  _proto.performEnter = function performEnter(node, mounting) {\r\n    var _this2 = this;\r\n\r\n    var enter = this.props.enter;\r\n    var appearing = this.context ? this.context.isMounting : mounting;\r\n    var timeouts = this.getTimeouts();\r\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\r\n    // if we are mounting and running this it means appear _must_ be set\r\n\r\n    if (!mounting && !enter) {\r\n      this.safeSetState({\r\n        status: ENTERED\r\n      }, function () {\r\n        _this2.props.onEntered(node);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.onEnter(node, appearing);\r\n    this.safeSetState({\r\n      status: ENTERING\r\n    }, function () {\r\n      _this2.props.onEntering(node, appearing);\r\n\r\n      _this2.onTransitionEnd(node, enterTimeout, function () {\r\n        _this2.safeSetState({\r\n          status: ENTERED\r\n        }, function () {\r\n          _this2.props.onEntered(node, appearing);\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto.performExit = function performExit(node) {\r\n    var _this3 = this;\r\n\r\n    var exit = this.props.exit;\r\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\r\n\r\n    if (!exit) {\r\n      this.safeSetState({\r\n        status: EXITED\r\n      }, function () {\r\n        _this3.props.onExited(node);\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.onExit(node);\r\n    this.safeSetState({\r\n      status: EXITING\r\n    }, function () {\r\n      _this3.props.onExiting(node);\r\n\r\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\r\n        _this3.safeSetState({\r\n          status: EXITED\r\n        }, function () {\r\n          _this3.props.onExited(node);\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  _proto.cancelNextCallback = function cancelNextCallback() {\r\n    if (this.nextCallback !== null) {\r\n      this.nextCallback.cancel();\r\n      this.nextCallback = null;\r\n    }\r\n  };\r\n\r\n  _proto.safeSetState = function safeSetState(nextState, callback) {\r\n    // This shouldn't be necessary, but there are weird race conditions with\r\n    // setState callbacks and unmounting in testing, so always make sure that\r\n    // we can cancel any pending setState callbacks after we unmount.\r\n    callback = this.setNextCallback(callback);\r\n    this.setState(nextState, callback);\r\n  };\r\n\r\n  _proto.setNextCallback = function setNextCallback(callback) {\r\n    var _this4 = this;\r\n\r\n    var active = true;\r\n\r\n    this.nextCallback = function (event) {\r\n      if (active) {\r\n        active = false;\r\n        _this4.nextCallback = null;\r\n        callback(event);\r\n      }\r\n    };\r\n\r\n    this.nextCallback.cancel = function () {\r\n      active = false;\r\n    };\r\n\r\n    return this.nextCallback;\r\n  };\r\n\r\n  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\r\n    this.setNextCallback(handler);\r\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\r\n\r\n    if (!node || doesNotHaveTimeoutOrListener) {\r\n      setTimeout(this.nextCallback, 0);\r\n      return;\r\n    }\r\n\r\n    if (this.props.addEndListener) {\r\n      this.props.addEndListener(node, this.nextCallback);\r\n    }\r\n\r\n    if (timeout != null) {\r\n      setTimeout(this.nextCallback, timeout);\r\n    }\r\n  };\r\n\r\n  _proto.render = function render() {\r\n    var status = this.state.status;\r\n\r\n    if (status === UNMOUNTED) {\r\n      return null;\r\n    }\r\n\r\n    var _this$props = this.props,\r\n        children = _this$props.children,\r\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\r\n\r\n\r\n    delete childProps.in;\r\n    delete childProps.mountOnEnter;\r\n    delete childProps.unmountOnExit;\r\n    delete childProps.appear;\r\n    delete childProps.enter;\r\n    delete childProps.exit;\r\n    delete childProps.timeout;\r\n    delete childProps.addEndListener;\r\n    delete childProps.onEnter;\r\n    delete childProps.onEntering;\r\n    delete childProps.onEntered;\r\n    delete childProps.onExit;\r\n    delete childProps.onExiting;\r\n    delete childProps.onExited;\r\n\r\n    if (typeof children === 'function') {\r\n      // allows for nested Transitions\r\n      return _react.default.createElement(_TransitionGroupContext.default.Provider, {\r\n        value: null\r\n      }, children(status, childProps));\r\n    }\r\n\r\n    var child = _react.default.Children.only(children);\r\n\r\n    return (// allows for nested Transitions\r\n      _react.default.createElement(_TransitionGroupContext.default.Provider, {\r\n        value: null\r\n      }, _react.default.cloneElement(child, childProps))\r\n    );\r\n  };\r\n\r\n  return Transition;\r\n}(_react.default.Component);\r\n\r\nTransition.contextType = _TransitionGroupContext.default;\r\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /**\r\n   * A `function` child can be used instead of a React element. This function is\r\n   * called with the current transition status (`'entering'`, `'entered'`,\r\n   * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context\r\n   * specific props to a component.\r\n   *\r\n   * ```jsx\r\n   * <Transition in={this.state.in} timeout={150}>\r\n   *   {state => (\r\n   *     <MyComponent className={`fade fade-${state}`} />\r\n   *   )}\r\n   * </Transition>\r\n   * ```\r\n   */\r\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\r\n\r\n  /**\r\n   * Show the component; triggers the enter or exit states\r\n   */\r\n  in: PropTypes.bool,\r\n\r\n  /**\r\n   * By default the child component is mounted immediately along with\r\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\r\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\r\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\r\n   */\r\n  mountOnEnter: PropTypes.bool,\r\n\r\n  /**\r\n   * By default the child component stays mounted after it reaches the `'exited'` state.\r\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\r\n   */\r\n  unmountOnExit: PropTypes.bool,\r\n\r\n  /**\r\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\r\n   * If you want to transition on the first mount set `appear` to `true`, and the\r\n   * component will transition in as soon as the `<Transition>` mounts.\r\n   *\r\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\r\n   */\r\n  appear: PropTypes.bool,\r\n\r\n  /**\r\n   * Enable or disable enter transitions.\r\n   */\r\n  enter: PropTypes.bool,\r\n\r\n  /**\r\n   * Enable or disable exit transitions.\r\n   */\r\n  exit: PropTypes.bool,\r\n\r\n  /**\r\n   * The duration of the transition, in milliseconds.\r\n   * Required unless `addEndListener` is provided.\r\n   *\r\n   * You may specify a single timeout for all transitions:\r\n   *\r\n   * ```jsx\r\n   * timeout={500}\r\n   * ```\r\n   *\r\n   * or individually:\r\n   *\r\n   * ```jsx\r\n   * timeout={{\r\n   *  appear: 500,\r\n   *  enter: 300,\r\n   *  exit: 500,\r\n   * }}\r\n   * ```\r\n   *\r\n   * - `appear` defaults to the value of `enter`\r\n   * - `enter` defaults to `0`\r\n   * - `exit` defaults to `0`\r\n   *\r\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\r\n   */\r\n  timeout: function timeout(props) {\r\n    var pt = _PropTypes.timeoutsShape;\r\n    if (!props.addEndListener) pt = pt.isRequired;\r\n\r\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n      args[_key - 1] = arguments[_key];\r\n    }\r\n\r\n    return pt.apply(void 0, [props].concat(args));\r\n  },\r\n\r\n  /**\r\n   * Add a custom transition end trigger. Called with the transitioning\r\n   * DOM node and a `done` callback. Allows for more fine grained transition end\r\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\r\n   *\r\n   * ```jsx\r\n   * addEndListener={(node, done) => {\r\n   *   // use the css transitionend event to mark the finish of a transition\r\n   *   node.addEventListener('transitionend', done, false);\r\n   * }}\r\n   * ```\r\n   */\r\n  addEndListener: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired before the \"entering\" status is applied. An extra parameter\r\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\r\n   *\r\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\r\n   */\r\n  onEnter: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired after the \"entering\" status is applied. An extra parameter\r\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\r\n   *\r\n   * @type Function(node: HtmlElement, isAppearing: bool)\r\n   */\r\n  onEntering: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired after the \"entered\" status is applied. An extra parameter\r\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\r\n   *\r\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\r\n   */\r\n  onEntered: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired before the \"exiting\" status is applied.\r\n   *\r\n   * @type Function(node: HtmlElement) -> void\r\n   */\r\n  onExit: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired after the \"exiting\" status is applied.\r\n   *\r\n   * @type Function(node: HtmlElement) -> void\r\n   */\r\n  onExiting: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired after the \"exited\" status is applied.\r\n   *\r\n   * @type Function(node: HtmlElement) -> void\r\n   */\r\n  onExited: PropTypes.func // Name the function so it is clearer in the documentation\r\n\r\n} : {};\r\n\r\nfunction noop() {}\r\n\r\nTransition.defaultProps = {\r\n  in: false,\r\n  mountOnEnter: false,\r\n  unmountOnExit: false,\r\n  appear: false,\r\n  enter: true,\r\n  exit: true,\r\n  onEnter: noop,\r\n  onEntering: noop,\r\n  onEntered: noop,\r\n  onExit: noop,\r\n  onExiting: noop,\r\n  onExited: noop\r\n};\r\nTransition.UNMOUNTED = 0;\r\nTransition.EXITED = 1;\r\nTransition.ENTERING = 2;\r\nTransition.ENTERED = 3;\r\nTransition.EXITING = 4;\r\n\r\nvar _default = (0, _reactLifecyclesCompat.polyfill)(Transition);\r\n\r\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}