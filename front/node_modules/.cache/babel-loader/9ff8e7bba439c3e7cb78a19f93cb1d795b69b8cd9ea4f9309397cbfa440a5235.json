{"ast":null,"code":"import _slicedToArray from \"C:/Users/SSAFY/Desktop/front \\uAD6C\\uBC84\\uC804/S09P22B205/front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\front \\uAD6C\\uBC84\\uC804\\\\S09P22B205\\\\front\\\\src\\\\layouts\\\\Admin\\\\BeforeLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\nimport { Button } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BeforeLogin() {\n  _s();\n  var _useContext = useContext(BackgroundColorContext),\n    bgColor = _useContext.color,\n    changeColor = _useContext.changeColor;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isWhiteContent = _useState2[0],\n    setIsWhiteContent = _useState2[1]; // 초기값 설정\n\n  useEffect(function () {\n    // body 요소에 white-content 클래스가 있는지 확인\n    var bodyHasWhiteContent = document.body.classList.contains(\"white-content\");\n    setIsWhiteContent(bodyHasWhiteContent); // isWhiteContent 값을 업데이트\n  }, []); // 빈 배열은 컴포넌트가 처음 마운트될 때만 실행되도록 함\n\n  var handleKakaoLogin = function handleKakaoLogin() {\n    // 환경 변수에서 값을 가져오기\n    var clientId = process.env.REACT_APP_CLIENT_ID;\n    var redirectUri = process.env.REACT_APP_REDIRECT_URI;\n\n    // GET 요청을 보낼 엔드포인트 URL\n    var apiUrl = \"https://kauth.kakao.com/oauth/authorize?client_id=\".concat(clientId, \"&redirect_uri=\").concat(redirectUri, \"&response_type=code\");\n    window.location.href = apiUrl;\n  };\n  var centerButtonStyle = {\n    backgroundImage: 'none',\n    color: isWhiteContent ? '#ffffff' : '#000000',\n    fontSize: '24px',\n    padding: '20px 40px',\n    borderRadius: '50px',\n    margin: 'auto',\n    display: 'block'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      style: centerButtonStyle,\n      className: \"bg-\".concat(isWhiteContent ? 'dark' : 'white'),\n      onClick: handleKakaoLogin,\n      children: \"Login with Kakao\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FixedPlugin, {\n      bgColor: bgColor,\n      handleBgClick: changeColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(BeforeLogin, \"1tjmgfHjsK9w6mWC+DZpplREKWk=\");\n_c = BeforeLogin;\nexport default BeforeLogin;\nvar _c;\n$RefreshReg$(_c, \"BeforeLogin\");","map":{"version":3,"names":["React","useContext","useEffect","useState","BackgroundColorContext","FixedPlugin","Button","jsxDEV","_jsxDEV","BeforeLogin","_s","_useContext","bgColor","color","changeColor","_useState","_useState2","_slicedToArray","isWhiteContent","setIsWhiteContent","bodyHasWhiteContent","document","body","classList","contains","handleKakaoLogin","clientId","process","env","REACT_APP_CLIENT_ID","redirectUri","REACT_APP_REDIRECT_URI","apiUrl","concat","window","location","href","centerButtonStyle","backgroundImage","fontSize","padding","borderRadius","margin","display","className","style","justifyContent","alignItems","height","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","handleBgClick","_c","$RefreshReg$"],"sources":["C:/Users/SSAFY/Desktop/front 구버전/S09P22B205/front/src/layouts/Admin/BeforeLogin.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport { BackgroundColorContext } from \"contexts/BackgroundColorContext\";\r\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nfunction BeforeLogin() {\r\n  const { color: bgColor, changeColor } = useContext(BackgroundColorContext);\r\n  const [isWhiteContent, setIsWhiteContent] = useState(false); // 초기값 설정\r\n\r\n  useEffect(() => {\r\n    // body 요소에 white-content 클래스가 있는지 확인\r\n    const bodyHasWhiteContent = document.body.classList.contains(\"white-content\");\r\n    setIsWhiteContent(bodyHasWhiteContent); // isWhiteContent 값을 업데이트\r\n  }, []); // 빈 배열은 컴포넌트가 처음 마운트될 때만 실행되도록 함\r\n\r\n  const handleKakaoLogin = () => {\r\n    // 환경 변수에서 값을 가져오기\r\n    const clientId = process.env.REACT_APP_CLIENT_ID;\r\n    const redirectUri = process.env.REACT_APP_REDIRECT_URI;\r\n\r\n    // GET 요청을 보낼 엔드포인트 URL\r\n    const apiUrl = `https://kauth.kakao.com/oauth/authorize?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=code`;\r\n    window.location.href = apiUrl;\r\n  };\r\n\r\n  const centerButtonStyle = {\r\n    backgroundImage: 'none',\r\n    color: isWhiteContent ? '#ffffff' : '#000000',\r\n    fontSize: '24px',\r\n    padding: '20px 40px',\r\n    borderRadius: '50px',\r\n    margin: 'auto',\r\n    display: 'block',\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\" style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n    }}>\r\n      <Button\r\n        style={centerButtonStyle}\r\n        className={`bg-${isWhiteContent ? 'dark' : 'white'}`}\r\n        onClick={handleKakaoLogin}\r\n      >\r\n        Login with Kakao\r\n      </Button>\r\n      <FixedPlugin bgColor={bgColor} handleBgClick={changeColor} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BeforeLogin;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,sBAAsB,QAAQ,iCAAiC;AACxE,OAAOC,WAAW,MAAM,uCAAuC;AAC/D,SAASC,MAAM,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,IAAAC,WAAA,GAAwCV,UAAU,CAACG,sBAAsB,CAAC;IAA3DQ,OAAO,GAAAD,WAAA,CAAdE,KAAK;IAAWC,WAAW,GAAAH,WAAA,CAAXG,WAAW;EACnC,IAAAC,SAAA,GAA4CZ,QAAQ,CAAC,KAAK,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApDG,cAAc,GAAAF,UAAA;IAAEG,iBAAiB,GAAAH,UAAA,IAAoB,CAAC;;EAE7Dd,SAAS,CAAC,YAAM;IACd;IACA,IAAMkB,mBAAmB,GAAGC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,eAAe,CAAC;IAC7EL,iBAAiB,CAACC,mBAAmB,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC7B;IACA,IAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB;IAChD,IAAMC,WAAW,GAAGH,OAAO,CAACC,GAAG,CAACG,sBAAsB;;IAEtD;IACA,IAAMC,MAAM,wDAAAC,MAAA,CAAwDP,QAAQ,oBAAAO,MAAA,CAAiBH,WAAW,wBAAqB;IAC7HI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGJ,MAAM;EAC/B,CAAC;EAED,IAAMK,iBAAiB,GAAG;IACxBC,eAAe,EAAE,MAAM;IACvBzB,KAAK,EAAEK,cAAc,GAAG,SAAS,GAAG,SAAS;IAC7CqB,QAAQ,EAAE,MAAM;IAChBC,OAAO,EAAE,WAAW;IACpBC,YAAY,EAAE,MAAM;IACpBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;EACX,CAAC;EAED,oBACEnC,OAAA;IAAKoC,SAAS,EAAC,SAAS;IAACC,KAAK,EAAE;MAC5BF,OAAO,EAAE,MAAM;MACfG,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,MAAM,EAAE;IACZ,CAAE;IAAAC,QAAA,gBACAzC,OAAA,CAACF,MAAM;MACLuC,KAAK,EAAER,iBAAkB;MACzBO,SAAS,QAAAX,MAAA,CAAQf,cAAc,GAAG,MAAM,GAAG,OAAO,CAAG;MACrDgC,OAAO,EAAEzB,gBAAiB;MAAAwB,QAAA,EAC3B;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT9C,OAAA,CAACH,WAAW;MAACO,OAAO,EAAEA,OAAQ;MAAC2C,aAAa,EAAEzC;IAAY;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV;AAAC5C,EAAA,CA/CQD,WAAW;AAAA+C,EAAA,GAAX/C,WAAW;AAiDpB,eAAeA,WAAW;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}